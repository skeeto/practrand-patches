Create a configure script build for PractRand

This is a simple, handcrafted configure script that generates an
appropriate POSIX-compatible Makefile.

diff --git /dev/null b/configure
new file mode 100755
--- /dev/null
+++ b/configure
@@ -0,0 +1,57 @@
+#!/bin/sh -e
+
+# PractRand configure script
+#
+# Accepts no arguments and only loads some defaults from environment
+# variables. Example usage:
+#   $ CXX=g++ ./configure
+#   $ make -kj$(nproc)
+# Or:
+#   $ CXX=g++ \
+#     CXXFLAGS='-ggdb3 -Og -fsanitize=address -fsanitize=undefined' \
+#     LDLIBS='-fsanitize=address -fsanitize=undefined' \
+#     ./configure
+#   $ make -kj$(nproc)
+
+CXX=${CXX:-c++}
+CXXFLAGS=${CXXFLAGS:--std=c++14 -O3}
+LDFLAGS=${LDFLAGS:-}
+LDLIBS=${LDLIBS:-}
+
+cat >Makefile <<EOF
+.POSIX:
+.SUFFIXES:
+CXX      = $CXX
+CXXFLAGS = $CXXFLAGS 
+LDFLAGS  = $LDFLAGS
+LDLIBS   = $LDLIBS
+
+all: RNG_test
+
+clean:
+	rm -f RNG_test \$(obj)
+
+.SUFFIXES: .cpp .o
+.cpp.o:
+	\$(CXX) -c -Iinclude -pthread \$(CXXFLAGS) -o \$@ \$<
+
+EOF
+
+for cpp in tools/RNG_test.cpp src/*.cpp src/RNGs/*.cpp src/RNGs/other/*.cpp; do
+    o="${cpp%*.cpp}".o
+    $CXX -Iinclude -pthread -MM -MT$o $cpp >>Makefile
+    obj="$(printf '%s \\\n %s' "$obj" $o)"
+    files="$files $o"
+done
+
+cat >>Makefile <<EOF
+obj =$obj
+
+RNG_test: \$(obj) Makefile
+	\$(CXX) -pthread \$(LDFLAGS) -o \$@ \$(obj) \$(LDLIBS)
+
+EOF
+
+for file in $files; do
+    printf '%s: Makefile\n' $file >>Makefile
+done
