--- a/tools/RNG_from_name.h
+++ b/tools/RNG_from_name.h
@@ -8,7 +8,7 @@
 			std::fprintf(stderr, "error reading standard input\n");
 			std::exit(0);
 		}
-		enum { BUFF_SIZE = 4096 / sizeof(Word) };
+		enum { BUFF_SIZE = 1L<<20 / sizeof(Word) };
 		Word *pos, *end;
 		bool ended;
 		Word buffer[BUFF_SIZE];
@@ -20,7 +20,10 @@
 			end = &buffer[n];
 		}
 	public:
-		_stdin_reader() : ended(false) { refill(); }
+		_stdin_reader() : ended(false) {
+			setvbuf(stdin, 0, _IOFBF, 1L<<20);
+			refill();
+		}
 		Word read() { if (pos == end) refill(); return *(pos++); }
 	};
 	class RNG_stdin : public PractRand::RNGs::vRNG8 {
